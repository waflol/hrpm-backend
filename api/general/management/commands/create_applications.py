from django.contrib.auth import get_user_model
from oauth2_provider.models import get_application_model
from django.core.exceptions import ValidationError


user = get_user_model().objects.create_superuser('admin@example.com', 'admin')
options = {
    'user': user.id, 'client_type': 'confidential',
    'authorization_grant_type': 'password',
    'algorithm': '', 'name': 'test'
}
Application = get_application_model()
application_fields = [field.name for field in Application._meta.fields]
application_data = {}
for key, value in options.items():
    # Data in options must be cleaned because there are unneeded key-value like
    # verbosity and others. Also do not pass any None to the Application
    # instance so default values will be generated for those fields
    if key in application_fields and value:
        if key == "user":
            application_data.update({"user_id": value})
        else:
            application_data.update({key: value})

new_application = Application(**application_data)

try:
    new_application.full_clean()
except ValidationError:
    raise ValidationError('ValidationError !!')
else:
    cleartext_secret = new_application.client_secret
    new_application.save()
    # Display the newly-created client_name or id.
    client_name_or_id = application_data.get("name", new_application.client_id)
    print("New application %s created successfully." % client_name_or_id)
    # Print out the cleartext client_secret if it was autogenerated.
    if "client_secret" not in application_data:
        print("client_secret: %s" % cleartext_secret)
